<?php

/**
 * cuic_tkncstm.php
 *
 * This script sets a long-lived, secure, HTTP-only first-party cookie ("tkncstm") to identify a website visitor.
 * The custom user ID is generated by the Google Tag Manager (GTM) after user consent and transmitted to this endpoint.
 * The same ID can then be used to enrich GA4 hits via the `user_id` parameter—both client-side and server-side.
 *
 * Objectives:
 * - Store a persistent `user_id` in a first-party cookie (ITP-resistant)
 * - Ensure consistency between client-side tracking and server-side ID reference
 * - Enable cross-session identification even in Safari / Firefox via same-origin cookie setting
 *
 * Usage Scenarios:
 * 1. XHR (POST): Sets the cookie and returns a JSON response
 * 2. <img> fallback (GET): Sets the cookie and returns a 1×1 transparent GIF image
 *
 * Key Features:
 * - Cookie is only set if not already present
 * - No hard failure: graceful response handling (image or JSON)
 * - No third-party cookies, no personal data stored server-side
 *
 * Integration:
 * - Triggered by a GTM tag based on user consent (XHR + optional image fallback)
 * - The cookie can then be read server-side and used for GA4 `user_id` attribution
 *
 * ---
 *
 * Part of a consent-based server-side user identification setup
 * Designed for robust cross-browser support and improved attribution in privacy-restricted environments
 *
 * © Florian Pankarter, / MEDIAFAKTUR – Marketing Performance Precision  
 * https://mediafaktur.marketing · fp@mediafaktur.marketing  
 * GitHub: https://github.com/mediafaktur/gtm-custom-user-id-cookie  
 * License: MIT
 */

// Determine response format based on Accept header
$acceptsJson = strpos($_SERVER['HTTP_ACCEPT'] ?? '', 'application/json') !== false;

// Get Custom User ID from POST or GET parameters
$user_id = $_POST['tkncstm'] ?? $_GET['tkncstm'] ?? null;

// If no new ID provided, check for existing cookie
if (!$user_id && isset($_COOKIE['tkncstm'])) {
    $user_id = $_COOKIE['tkncstm'];
}

if ($user_id) {
    // Set the cookie only if it doesn't already exist
    if (!isset($_COOKIE['tkncstm'])) {
        setcookie('tkncstm', $user_id, [
            'expires' => time() + 31536000,        // 1 Jahr gültig
            'path' => '/',                         // Cookie gültig für gesamte Domain
            'domain' => $_SERVER['HTTP_HOST'],     // Domainweite Gültigkeit
            'secure' => true,                      // Nur über HTTPS übertragbar
            'httponly' => true,                    // Nicht per JavaScript zugreifbar
            'samesite' => 'Lax'                    // Schutz gegen Cross-Site-Leaks
        ]);
    }

    if ($acceptsJson) {
        // Respond with JSON (for XHR requests)
        header('Content-Type: application/json');
        echo json_encode([
            'message' => 'Cookie set or already present',
            'token' => $user_id
        ]);
    } else {
        // Respond with 1x1 transparent GIF (for image fallback)
        header('Content-Type: image/gif');
        echo base64_decode('R0lGODlhAQABAIAAAAAAAP///ywAAAAAAQABAAACAUwAOw==');
    }

} else {
    // Graceful failure handling – no valid ID available
    if ($acceptsJson) {
        header('Content-Type: application/json');
        echo json_encode([
            'message' => 'No user_id provided – cookie not set'
        ]);
    } else {
        // Still respond with transparent GIF for fallback compatibility
        header('Content-Type: image/gif');
        echo base64_decode('R0lGODlhAQABAIAAAAAAAP///ywAAAAAAQABAAACAUwAOw==');
    }
}


?> 